# 941. Valid Mountain Array


## Description

Given an array of integers arr, return true if and only if it is a valid mountain array.

Recall that arr is a mountain array if and only if:

```
arr.length >= 3
There exists some i with 0 < i < arr.length - 1 such that:
arr[0] < arr[1] < ... < arr[i - 1] < arr[i]
arr[i] > arr[i + 1] > ... > arr[arr.length - 1]
```

## Solution

### Approach 1: 单指针遍历

**Intuition**

从左往右遍历，找到最大值后再判断往下是否也都是小于这个最大值的。在这道题中，反证法的要考虑情况比正着直接判断多，所以直接考虑return true的情况。

```
class Solution {
    public boolean validMountainArray(int[] arr) {
        int i = 0;
        int len = arr.length;
        
        // 先遍历最大值
        while((i+1)<len && arr[i]<arr[i+1]){
            i++;
        }
        
        // 当遍历找到最大值后，如果是最后一个元素，就直接返回false
        if( i==len-1 || i==0){
            return false;
        }
        
        // 从当前位置往下遍历
        while((i+1)<len && arr[i]>arr[i+1]){
            i++;
        }
        
        // 当最大值的左边和右边都遍历完后i=len-1，说明数组确实是山峰数组
        return i==len-1;
    }
}
```


### Approach 2: 双指针遍历

```
class Solution {
    public boolean validMountainArray(int[] arr) {
        int l = 0;
        int r = arr.length - 1;

        while(l<arr.length-1 && arr[l]<arr[l+1]){
            l++;
        }

        while(r>0 && arr[r]<arr[r-1]){
            r--;
        }

        return l==r && l>0 && r<arr.length-1;

    }
}
```




